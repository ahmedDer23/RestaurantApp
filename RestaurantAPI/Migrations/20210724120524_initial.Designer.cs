// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RestaurantAPI.Models;

namespace RestaurantAPI.Migrations
{
    [DbContext(typeof(RestaurantDbContext))]
    [Migration("20210724120524_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("RestaurantAPI.Models.Customer", b =>
                {
                    b.Property<int>("customerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("customerName")
                        .HasColumnType("text");

                    b.HasKey("customerId");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("RestaurantAPI.Models.FoodItem", b =>
                {
                    b.Property<int>("foodItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("foodItemName")
                        .HasColumnType("integer");

                    b.Property<decimal>("price")
                        .HasColumnType("numeric");

                    b.HasKey("foodItemId");

                    b.ToTable("foodItems");
                });

            modelBuilder.Entity("RestaurantAPI.Models.OrderDetail", b =>
                {
                    b.Property<int>("orderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("foodItemId")
                        .HasColumnType("integer");

                    b.Property<decimal>("foodItemPrice")
                        .HasColumnType("numeric");

                    b.Property<long>("orderMasterId")
                        .HasColumnType("bigint");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.HasKey("orderDetailId");

                    b.HasIndex("foodItemId");

                    b.HasIndex("orderMasterId");

                    b.ToTable("orderDetails");
                });

            modelBuilder.Entity("RestaurantAPI.Models.OrderMaster", b =>
                {
                    b.Property<long>("orderMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("customerId")
                        .HasColumnType("integer");

                    b.Property<string>("orderNumber")
                        .HasColumnType("text");

                    b.Property<string>("paymentMethod")
                        .HasColumnType("text");

                    b.Property<decimal>("priceTotal")
                        .HasColumnType("numeric");

                    b.HasKey("orderMasterId");

                    b.HasIndex("customerId");

                    b.ToTable("orderMasters");
                });

            modelBuilder.Entity("RestaurantAPI.Models.OrderDetail", b =>
                {
                    b.HasOne("RestaurantAPI.Models.FoodItem", "foodItem")
                        .WithMany()
                        .HasForeignKey("foodItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantAPI.Models.OrderMaster", null)
                        .WithMany("orderDetails")
                        .HasForeignKey("orderMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("foodItem");
                });

            modelBuilder.Entity("RestaurantAPI.Models.OrderMaster", b =>
                {
                    b.HasOne("RestaurantAPI.Models.Customer", "customer")
                        .WithMany()
                        .HasForeignKey("customerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customer");
                });

            modelBuilder.Entity("RestaurantAPI.Models.OrderMaster", b =>
                {
                    b.Navigation("orderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
